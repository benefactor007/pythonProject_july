from pwd_gen_2 import count_occur_times

# import os
# import sys
# current_dir = os.path.abspath(os.path.dirname(__file__))
# sys.path.append(current_dir)
# sys.path.append("..")

"""
example 1:
New password: 53223701
randomListSum:  [[5, 8, 5, 6, 1, 2, 3, 8], [3, 3, 8, 2, 2, 8, 7, 5], [1, 2, 9, 2, 8, 6, 7, 2]]

example 2:
New password: 65756991
randomListSum:  [[2, 9, 7, 3, 4, 8, 2, 3]]

example 3:
New password: 39769107
randomListSum:  [[7, 3, 4, 1, 7, 5, 2, 5], [5, 2, 5, 1, 2, 6, 2, 8], [6, 4, 4, 8, 1, 2, 1, 1], [2, 8, 2, 9, 3, 7, 5, 2], [7, 3, 4, 1, 4, 1, 5, 5], [7, 4, 1, 2, 2, 6, 7, 3]]

"""


#  for a in (x for x in dir(I) if not x.startswith('__')):


def check_count_in_dict(pwd: str):
    for i in count_occur_times(pwd).values():
        if i > 2:
            return False

    else:
        return True


def decode_pwd(pwd: str, rls: list):
    print(len(rls))
    # print('pwd:', pwd)
    res = []
    # print(pwd,rls)
    # print(type(rls[0][0]))
    for i in range(len(rls)):
        # res = []
        # for x, y in zip(pwd,rls[i]):
        # print([int(x) + 10 - y if int(x) < y else int(x) - y for x,y in zip(pwd,rls[i])])
        reverse_pwd = ([int(x) + 10 - y if int(x) < y else int(x) - y for x, y in zip(pwd, rls[i])])[::-1]
        print(reverse_pwd)
        pwd = reverse_pwd
        # print(count_occur_times(reverse_pwd))
        # if 4 in res[::-1]:
        #     print('\n we got 4\n')
        #     print(count_occur_times(''.join(new_pwd)))
        #     new_pwd = ''.join(res[::-1])
        #     print('new pwd', new_pwd)
        # elif not check_count_in_dict(''.join(res[::-1])):
        #     print('digit appears more than 2 times')
        #     print(count_occur_times(''.join(new_pwd)))
        #     new_pwd = ''.join(res[::-1])
        #     print('current new_pwd', new_pwd)
        # else:
        #     new_pwd = res[::-1]
        #     new_pwd = [str(x) for x in new_pwd]
        #     new_pwd = ''.join(new_pwd)
        #     print(new_pwd)
        #     print(count_occur_times(''.join(new_pwd)))
        #     return new_pwd
    return ''.join([str(i) for i in pwd])


if __name__ == '__main__':
    def test_case_1():
        if decode_pwd('65756991', [[2, 9, 7, 3, 4, 8, 2, 3]]) == '87122064':
            return True
        else:
            return False


    def test_case_2():
        if decode_pwd('53223701',
                      [[5, 8, 5, 6, 1, 2, 3, 8], [3, 3, 8, 2, 2, 8, 7, 5], [1, 2, 9, 2, 8, 6, 7, 2]]) == '87122064':
            return True
        else:
            return False


    def test_case_3():
        case_list = [[7, 3, 4, 1, 7, 5, 2, 5], [5, 2, 5, 1, 2, 6, 2, 8], [6, 4, 4, 8, 1, 2, 1, 1],
                     [2, 8, 2, 9, 3, 7, 5, 2], [7, 3, 4, 1, 4, 1, 5, 5], [7, 4, 1, 2, 2, 6, 7, 3]]
        if decode_pwd('39769107', case_list) == '87122064':
            return True
        else:
            return False


    # decode_pwd('65756991', [[2, 9, 7, 3, 4, 8, 2, 3]])
    # decode_pwd('91689515',[[5, 5, 6, 6, 7, 4, 4, 7]])
    # decode_pwd('33198602', [[8, 9, 7, 7, 8, 6, 2, 9], [8, 8, 8, 3, 1, 5, 5, 2], [9, 3, 9, 9, 5, 1, 3, 7]][::-1])
    # decode_pwd('37238098',[[1, 9, 1, 9, 1, 6, 4, 2], [4, 3, 9, 2, 3, 3, 9, 9], [7, 2, 4, 1, 4, 8, 4, 7], [8, 9, 8, 3, 7, 1, 5, 7], [5, 6, 3, 1, 6, 8, 2, 9]][::-1])
    # decode_pwd('31515937',[[7, 5, 1, 1, 1, 9, 3, 6], [8, 4, 4, 3, 6, 5, 6, 2], [5, 9, 3, 5, 9, 2, 5, 9], [3, 1, 1, 9, 2, 5, 2, 4], [2, 9, 1, 7, 8, 6, 3, 4], [9, 7, 8, 2, 8, 1, 5, 9], [5, 8, 8, 4, 2, 4, 5, 8], [8, 2, 5, 9, 8, 8, 5, 7], [4, 3, 5, 3, 5, 9, 1, 5], [6, 1, 7, 3, 6, 4, 7, 8], [9, 3, 9, 1, 2, 8, 5, 5], [4, 7, 1, 6, 2, 9, 5, 1]][::-1])
    # decode_pwd('01163836',[[9, 8, 3, 5, 3, 9, 8, 9], [4, 1, 8, 9, 1, 2, 2, 1], [4, 3, 7, 1, 7, 6, 6, 6], [3, 8, 5, 4, 1, 8, 1, 8], [7, 8, 2, 1, 2, 9, 3, 4], [9, 1, 7, 9, 2, 8, 3, 4], [8, 5, 7, 4, 7, 2, 1, 3], [4, 6, 4, 3, 6, 1, 7, 1]][::-1])

    for i in (
            decode_pwd('65756991', [[2, 9, 7, 3, 4, 8, 2, 3]][::-1]),
            decode_pwd('91689515', [[5, 5, 6, 6, 7, 4, 4, 7]][::-1]),
            decode_pwd('33198602',
                       [[8, 9, 7, 7, 8, 6, 2, 9], [8, 8, 8, 3, 1, 5, 5, 2], [9, 3, 9, 9, 5, 1, 3, 7]][::-1]),
            decode_pwd('37238098',
                       [[1, 9, 1, 9, 1, 6, 4, 2], [4, 3, 9, 2, 3, 3, 9, 9], [7, 2, 4, 1, 4, 8, 4, 7],
                        [8, 9, 8, 3, 7, 1, 5, 7],
                        [5, 6, 3, 1, 6, 8, 2, 9]][::-1]),
            decode_pwd('31515937',
                       [[7, 5, 1, 1, 1, 9, 3, 6], [8, 4, 4, 3, 6, 5, 6, 2], [5, 9, 3, 5, 9, 2, 5, 9],
                        [3, 1, 1, 9, 2, 5, 2, 4],
                        [2, 9, 1, 7, 8, 6, 3, 4], [9, 7, 8, 2, 8, 1, 5, 9], [5, 8, 8, 4, 2, 4, 5, 8],
                        [8, 2, 5, 9, 8, 8, 5, 7],
                        [4, 3, 5, 3, 5, 9, 1, 5], [6, 1, 7, 3, 6, 4, 7, 8], [9, 3, 9, 1, 2, 8, 5, 5],
                        [4, 7, 1, 6, 2, 9, 5, 1]][
                       ::-1]),
            decode_pwd('01163836', [[9, 8, 3, 5, 3, 9, 8, 9], [4, 1, 8, 9, 1, 2, 2, 1], [4, 3, 7, 1, 7, 6, 6, 6],
                                    [3, 8, 5, 4, 1, 8, 1, 8], [7, 8, 2, 1, 2, 9, 3, 4], [9, 1, 7, 9, 2, 8, 3, 4],
                                    [8, 5, 7, 4, 7, 2, 1, 3], [4, 6, 4, 3, 6, 1, 7, 1]][::-1])):
            if i == '87122064':
                print('PASS')
            else:
                print('False')

    decode_pwd('10135309',[[7, 9, 2, 6, 8, 4, 8, 6], [9, 6, 9, 5, 5, 8, 4, 6]])

    # 7641081073108
    decode_pwd('3129706168809', [[8, 6, 5, 4, 7, 5, 5, 1, 2, 2, 5, 7, 5], [8, 7, 4, 6, 3, 9, 7, 7, 9, 2, 1, 4, 3], [8, 4, 4, 8, 7, 1, 5, 7, 1, 5, 4, 3, 3], [2, 9, 1, 8, 3, 4, 4, 2, 6, 8, 5, 1, 9], [2, 4, 8, 6, 2, 2, 3, 2, 2, 5, 9, 1, 6], [8, 8, 7, 9, 4, 3, 8, 1, 1, 8, 9, 8, 9], [9, 8, 6, 6, 7, 8, 4, 1, 6, 4, 2, 3, 7], [4, 4, 7, 6, 5, 6, 7, 4, 8, 5, 3, 4, 6], [7, 2, 2, 2, 3, 2, 5, 1, 7, 2, 5, 4, 3], [9, 6, 4, 1, 9, 5, 5, 9, 7, 6, 5, 8, 4], [5, 1, 9, 6, 4, 8, 5, 5, 9, 2, 6, 8, 3], [7, 1, 3, 9, 1, 7, 2, 2, 1, 6, 8, 9, 1], [5, 3, 7, 1, 3, 1, 5, 8, 5, 4, 2, 9, 9], [1, 6, 4, 5, 5, 8, 1, 4, 4, 1, 6, 8, 3], [4, 1, 5, 4, 9, 4, 9, 8, 7, 5, 6, 6, 2], [9, 6, 2, 9, 6, 4, 9, 2, 4, 5, 7, 5, 5], [5, 7, 7, 3, 3, 1, 7, 6, 9, 3, 5, 1, 5], [3, 6, 9, 2, 4, 9, 5, 8, 1, 7, 2, 7, 9], [2, 9, 9, 1, 1, 3, 8, 5, 4, 3, 9, 7, 9], [1, 6, 8, 8, 1, 9, 4, 4, 7, 7, 6, 7, 6], [6, 3, 8, 1, 4, 3, 4, 6, 6, 5, 2, 4, 2], [7, 5, 1, 4, 1, 6, 9, 9, 5, 3, 2, 2, 5], [1, 3, 6, 8, 6, 7, 2, 7, 6, 3, 4, 4, 2], [1, 2, 1, 5, 3, 5, 9, 6, 3, 2, 5, 2, 7], [4, 7, 4, 4, 2, 7, 1, 2, 9, 7, 8, 8, 8], [2, 9, 1, 9, 9, 9, 8, 6, 9, 9, 3, 9, 6], [4, 9, 9, 9, 2, 8, 6, 6, 1, 1, 6, 6, 6], [1, 6, 9, 1, 1, 9, 2, 7, 3, 3, 2, 4, 4], [4, 4, 7, 8, 2, 6, 6, 6, 6, 4, 8, 3, 8], [4, 7, 4, 6, 1, 5, 1, 2, 1, 4, 8, 1, 3], [9, 4, 7, 9, 7, 5, 3, 8, 3, 4, 9, 1, 8], [6, 9, 1, 9, 3, 4, 8, 8, 2, 7, 6, 8, 7], [8, 1, 2, 5, 3, 9, 1, 8, 7, 8, 3, 1, 9], [2, 6, 8, 6, 2, 2, 2, 1, 7, 6, 6, 8, 7], [3, 6, 2, 3, 2, 9, 2, 1, 3, 7, 1, 4, 7], [8, 8, 5, 6, 2, 3, 9, 2, 2, 2, 1, 8, 9], [3, 5, 2, 8, 2, 6, 9, 1, 9, 7, 4, 7, 7], [8, 7, 5, 9, 5, 2, 5, 2, 7, 9, 5, 2, 7], [9, 4, 2, 1, 6, 5, 7, 1, 6, 3, 5, 6, 7], [5, 9, 8, 3, 2, 8, 8, 9, 7, 7, 1, 6, 9], [6, 7, 9, 9, 7, 4, 7, 7, 2, 6, 2, 4, 1], [1, 5, 2, 4, 6, 7, 5, 9, 9, 1, 9, 4, 5], [6, 8, 9, 6, 7, 5, 9, 9, 9, 8, 5, 4, 1], [6, 7, 3, 2, 4, 1, 4, 9, 8, 8, 9, 4, 4]])